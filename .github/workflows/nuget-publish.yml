name: Publish NuGet Package

on:
  push:
    branches:
      - main
    paths:
      - '**/*.csproj'
      - '.github/workflows/nuget-publish.yml'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '9.0.*'

      - name: Get project version
        id: get_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/CoreOne.ModelPatch/CoreOne.ModelPatch.csproj)
          echo "Package version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if package version exists on NuGet
        id: check_nuget
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          PACKAGE_NAME="coreone.modelpatch"  # lowercase required for NuGet API path
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://api.nuget.org/v3-flatcontainer/$PACKAGE_NAME/$VERSION/$PACKAGE_NAME.$VERSION.nupkg)
          
          if [ "$STATUS_CODE" -eq 200 ]; then
            echo "Package version $VERSION already exists on NuGet."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Package version $VERSION does NOT exist on NuGet."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build project
        run: dotnet build src/CoreOne.ModelPatch/CoreOne.ModelPatch.csproj --configuration Release

      - name: Pack Nuget
        if: steps.check_nuget.outputs.exists == 'false'
        run: dotnet pack src/CoreOne.ModelPatch/CoreOne.ModelPatch.csproj --configuration Release 

      - name: Publish to NuGet
        if: steps.check_nuget.outputs.exists == 'false'
        run: dotnet nuget push src/CoreOne.ModelPatch/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json


